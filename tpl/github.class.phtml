# <?= $this->className ?>

<?= $this->classDescription->short ?>

<?php if ($this->classDescription->long) : ?>

<?= $this->classDescription->long ?>
<?php endif ?>

## Methods

| Name | Description |
|------|-------------|
<?php foreach ($this->methods as $name => $info) : ?>
|[<?= $name ?>](#<?= strtolower($this->className.$name) ?>)|<?= $info->shortDescription ?>|
<?php endforeach ?>

---


<?php foreach ($this->methods as $name => $info) : ?>

### <?= $this->className ?>::<?= $name ?>

<?= $info->shortDescription . "  \n" ?>
<?= str_replace("\n", "  \n", $info->longDescription) ?>


```php
<?= $info->visibility ?> function <?= $name ?> (<?= count($info->argumentsList) ? '  ' . "\n    " . join(',  ' . "\n    ", $info->argumentsList) . "  \n" : '' ?>)<?php if (substr($name, 0, 2) !== '__' && count($info->returnValue)) : ?> : <?= count($info->returnValue) ? implode(', ', current($info->returnValue)->type) : 'null' ?> <?php endif; ?> <?php echo "  \n"; ?>
```

<?php if ($info->argumentsDescription || count($info->returnValue)) : ?>
|  | Type | Description |
|-----|-----|-----|
<?php if ($info->argumentsDescription) : ?>
<?php foreach ($info->argumentsDescription as $param) : ?>
| `<?= $param->name ?>` | <?= join(', ', array_map(function ($v) { $str = '`' . $v . '`'; if (in_array($str, $this->classes)) { $str .= '*'; } return $str; }, $param->type)) ?> | <?= str_replace("\n", "  \n", $param->desc) ?> |
<?php endforeach ?>
<?php endif ?>
<?php if (substr($name, 0, 2) !== '__' && count($info->returnValue)) : ?>
|  |  |  |
| `return` | <?= count($info->returnValue) ? implode(', ', array_map(function ($v) { $str = '`' . $v . '`'; if (isset($this->classes[$v])) { $str = '['.$str.']('.$this->classes[$v].')'; } return $str; }, current($info->returnValue)->type)) : 'null' ?> | <?= count($info->returnValue) ? str_replace("\n", "  \n", current($info->returnValue)->desc) : 'null' ?> |
<?php endif; ?>
<?php endif; ?>

---

<?php endforeach ?>
